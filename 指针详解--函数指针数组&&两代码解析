两个代码解析
1.(*(void)(*)())0();
2.void(*signal(int , void(*)(int)))(int);


int add(int x,int y)
{
	int z;
	z = x + y;
	return z;
}
int main()
{
	int a = 10;
	int b = 20;
	int(*pa)(int ,int) = add;
	printf("%d\n",(pa)(2,3));
	printf("%d\n",(*pa)(2,3));//解应用找到函数add，然后传参
	return 0;
}
函数指针数组
int add(int x,int y)
{
	return x + y;
}
int sub(int x,int y)
{
	return x - y;
}
int mul(int x,int y)
{
	return x * y;
}
int div(int x,int y)
{
	return x / y;
}

int main()
{
	int* arr[5];
	//int (*p)(int ,int) = add;
	//printf("%d\n",(*p)(2 ,3));
	//需要一个数组，可以存放四个函数的地址---函数指针的数组
	int (*parr[4])(int ,int) = {add,sub,mul,div};//函数指针数组
	int i = 0;
	for(i = 0;i<4;i++)
	{
		printf("%d\n",parr[i](2,3));//函数指针的使用
	}
	return 0;
}

