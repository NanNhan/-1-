int main(void)
{
	int a[5] = {1,2,3,4,5};
	//int *ptr = (int *)(&a + 1);
	//printf("%d,%d\n",*(a+1),*ptr);
	//printf("%d,%d",*(a + 1),*(ptr - 1));//怀疑内存是一个圈圈
	return 0;
}
数组指针
#include<stdio.h>
int main()
{
	//int* p = NULL;//整型指针-指向整型的指针
	//char* pc = NULL;//pc是字符指针-指向字符的指针
	//int arr[10] = {0};//arr首元素地址，&arr[0]-首元素地址，&arr - 数组的地址
	int arr[10] = {1,2,3,4,5,6,7,8,9,10};

	int(*p)[10] ={&arr};//数组的地址要存起来
	//p就是数组指针

	return 0;
}
int main()
{
	int arr[10] = {1,2,3,4,5,6,7,8,9,10};
	//int (*pa)[10] = &arr;
	//int i = 0;
	int *p = arr;
	int i = 0;
	for(i = 0;i < 10;i++)
	{
		printf("%d",*(p+i));
	}

	//for(i = 0;i<10;i++)
	//{
	//	printf("%d",*(*pa+i));//*pa == arr
	//}
	/*{
		printf("%d",(*pa)[i]);
	}
	{
		printf("%d",((*pa + i)));
	}*/
	return 0;
}
void print1(int arr[3][5],int x,int y)
{
	int i = 0;
	int j = 0;
	for(i = 0;i<x;i++)
	{
		for(j = 0;j<y;j++)
		{
			printf("%d",arr[i][j]);
		}
		printf("\n");
	}
}
参数是指针的形式
void print2(int (*p)[5],int x,int y)
{
	int i = 0;
	for(i = 0;i<x;i++)
	{
		int j = 0;
		for(j = 0;j<y;j++)
		{
			printf("%d",*(*(p + i)+j));
		}
		printf("\n");
	}
}
int main()
{
	int arr[3][5] = {{1,2,3,4,5},{2,3,4,5,6},{3,4,5,6,7}};
	print2(arr,3,5);//arr - 数组名 - 数组名就是首元素地址
	return 0;
}
