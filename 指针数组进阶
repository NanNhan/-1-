#include<stdio.h>
void test(int arr[])
{
	printf("%d\n",sizeof(arr)/sizeof(arr[0]));//计算数组中有多少个元素，数组长度/数组中每个元素长度

}
int main()
{
	int arr[10] = { 0 };
	test(arr);
	return 0;
}
字符指针
int main()
{
	char arr[] = "abcdef";
	char* pc = arr;
	printf("%s\n",arr);
	printf("%c\n",*pc);
	return 0;
}

int main()
{
	const char* p = "abcdef";//常量字符串
	//*p = 'W';//---段错误---访问非法内存，常量字符串不可更改
	printf("%s",p);
	/*printf("%c\n",*p);
	printf("%s\n",p);*/
	return 0;
}
stackoverflow
Segmentfault,段错误---访问非法内存
int main()
{
	char arr1[] = "abcdef";
	char arr2[] = "abcdef";
	const char* p1 = "abcdef";
	const char* p2 = "abcdef";//常量字符串
	//char* p = arr1;
	/*if(arr1 == arr2)
	{
		printf("hehe\n");//指向两个字符串
	}
	else
	{
		printf("haha\n");
	}*/

	if(p1 = p2)
	{
		printf("hehe\n");//常量字符串，一模一样，在内存中存一份
	}
	else
	{
		printf("haha\n");
	}
	return 0;
}

指针数组---存放指针的数组
int main()
{
	int arr[10] = {0};//整型数组
	char ch[5] = {0};//字符数组
	int* parr[4];//整型指针的数组or存放整型指针的数组简称数组---指针数组
	char* pch[5];//存放字符指针的数组---指针数组
	return 0;
}
int main()
{
	int a = 10;
	int b = 20;
	int c = 30;
	int d = 40;
	int* arr[4] = {&a,&b,&c,&d};
	int i = 0;
	for(i = 0;i<4;i++)
	{
		printf("%d\n",*(arr[i]));
	}
	return 0;
}

int main()
{
	int arr1[] = {1,2,3,4,5};
	int arr2[] = {2,3,4,5,6};
	int arr3[] = {3,4,5,6,7};
	int* parr[] = {arr1,arr2,arr3};
	int i = 0;
	for(i = 0;i<3;i++)
	{
		int j = 0;
		for(j = 0;j<5;j++)
		{
			printf("%d ",*(parr[i]+j));
		}
		printf("\n");
	}
	return 0;
}
